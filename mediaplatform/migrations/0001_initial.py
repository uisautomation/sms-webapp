# Generated by Django 2.0.6 on 2018-07-10 11:04

import django.contrib.postgres.fields
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Collection',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='Title of collection')),
                ('description', models.TextField(help_text='Description for collection')),
                ('media_items', django.contrib.postgres.fields.ArrayField(base_field=models.UUIDField(), blank=True, help_text='Primary keys of media items in this collection', size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='MediaItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('title', models.TextField(help_text='Title of media item')),
                ('description', models.TextField(blank=True, help_text='Description of media item')),
                ('downloadable', models.BooleanField(help_text='If this item can be viewed, can it also be downloaded?')),
                ('language', models.CharField(help_text='ISO 639-3 three letter language code describing majority language used in this item', max_length=10)),
                ('copyright', models.TextField(blank=True, help_text='Free text describing Copyright holder')),
                ('tags', django.contrib.postgres.fields.ArrayField(base_field=models.CharField(max_length=256), blank=True, help_text='Tags/keywords for item', size=None)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('deleted_at', models.DateTimeField(blank=True, null=True)),
            ],
        ),
        migrations.CreateModel(
            name='Permission',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('crsids', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=[], size=None)),
                ('lookup_groups', django.contrib.postgres.fields.ArrayField(base_field=models.BigIntegerField(), blank=True, default=[], size=None)),
                ('lookup_insts', django.contrib.postgres.fields.ArrayField(base_field=models.TextField(), blank=True, default=[], size=None)),
                ('is_public', models.BooleanField(default=False)),
                ('is_signed_in', models.BooleanField(default=False)),
            ],
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='edit_permission',
            field=models.OneToOneField(help_text='Restriction on who can modify this item', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='mediaplatform.Permission'),
        ),
        migrations.AddField(
            model_name='mediaitem',
            name='view_permission',
            field=models.OneToOneField(help_text='Restriction on who can see/hear this item', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='mediaplatform.Permission'),
        ),
        migrations.AddField(
            model_name='collection',
            name='edit_permission',
            field=models.OneToOneField(help_text='Restriction on who can modify this collection', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='mediaplatform.Permission'),
        ),
        migrations.AddField(
            model_name='collection',
            name='view_permission',
            field=models.OneToOneField(help_text='Restriction on who can see which items are in this collection', on_delete=django.db.models.deletion.PROTECT, related_name='+', to='mediaplatform.Permission'),
        ),
    ]
